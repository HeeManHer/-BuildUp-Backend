<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.warmmingup.buildup.admin.dao.UserManageMapper">

    <resultMap id="userResultMap" type="com.warmmingup.buildup.admin.dto.UserDTO">
        <id property="no" column="EMPLOYEE_NO"/>
        <result property="name" column="EMPLOYEE_NAME"/>
        <result property="email" column="EMPLOYEE_EMAIL"/>
        <result property="authority" column="EMPLOYEE_ROLE"/>
    </resultMap>

    <select id="selectUserTotalCount" parameterType="hashmap" resultType="_int">
        SELECT COUNT(*)
          FROM EMPLOYEE E
         WHERE E.EMPLOYEE_ROLE NOT IN ('ROLE_ADMIN')
        <if test="search != null">
            AND ( E.EMPLOYEE_NO LIKE #{search}
               OR E.EMPLOYEE_NAME LIKE #{search}
               OR E.EMPLOYEE_EMAIL LIKE #{search}
               OR E.EMPLOYEE_ROLE LIKE #{search}
                )
        </if>
    </select>

    <select id="selectAllUsers" parameterType="hashmap" resultMap="userResultMap">
        SELECT
               E.EMPLOYEE_NO
             , E.EMPLOYEE_NAME
             , E.EMPLOYEE_EMAIL
             , E.EMPLOYEE_ROLE
          FROM ( SELECT ROWNUM R
                      , D.*
                   FROM ( SELECT A.EMPLOYEE_NO
                               , A.EMPLOYEE_NAME
                               , A.EMPLOYEE_EMAIL
                               , A.EMPLOYEE_ROLE
                            FROM EMPLOYEE A
                           WHERE A.EMPLOYEE_ROLE NOT IN ('ROLE_ADMIN')
                            <if test="search != null">
                                AND ( A.EMPLOYEE_NO LIKE #{search}
                                   OR A.EMPLOYEE_NAME LIKE #{search}
                                   OR A.EMPLOYEE_EMAIL LIKE #{search}
                                   OR A.EMPLOYEE_ROLE LIKE #{search}
                                )
                            </if>
                           ORDER BY A.EMPLOYEE_NO
                        ) D
               ) E
          WHERE E.R BETWEEN #{pageInfo.startRow} AND #{pageInfo.endRow}
    </select>

    <select id="selectUserByNo" parameterType="_int" resultMap="userResultMap">
        SELECT E.EMPLOYEE_NO
             , E.EMPLOYEE_NAME
             , E.EMPLOYEE_EMAIL
             , E.EMPLOYEE_ROLE
          FROM EMPLOYEE E
         WHERE E.EMPLOYEE_NO = #{userNo}
    </select>


    <insert id="insertNewUser" parameterType="com.warmmingup.buildup.admin.dto.NewUserDTO">
        INSERT
          INTO EMPLOYEE A
        (
          A.EMPLOYEE_NO
        , A.EMPLOYEE_NAME
        , A.EMPLOYEE_EMAIL
        , A.EMPLOYEE_PASSWORD
        , A.EMPLOYEE_ROLE
        )
        VALUES(
          #{no}
        , #{name}
        , #{email}
        , #{pwd}
        , #{authority}
        )
    </insert>

    <update id="updateUser" parameterType="hashmap">
        UPDATE EMPLOYEE
           SET
               EMPLOYEE_NO = #{no}
             , EMPLOYEE_NAME = #{name}
             , EMPLOYEE_EMAIL = #{email}
             , EMPLOYEE_ROLE = #{authority}
         WHERE EMPLOYEE_NO = #{oldNo}
    </update>

    <delete id="deleteUser" parameterType="_int">
        DELETE
          FROM EMPLOYEE
         WHERE EMPLOYEE_NO=#{userNo}
    </delete>

</mapper>